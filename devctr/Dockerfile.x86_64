FROM ubuntu:latest
#FROM ubuntu:20.04

ARG AT_SRC_DIR="/mdb"
ARG TINI_VERSION_TAG="v0.18.0"
ARG TMP_BUILD_DIR=/tmp/build

ARG RUST_TOOLCHAIN="1.52.1"
ARG MDB_SRC_DIR="/mdb"
ARG MDB_BUILD_DIR="$MDB_SRC_DIR/build"
ARG CARGO_REGISTRY_DIR="$MDB_BUILD_DIR/cargo_registry"
ARG CARGO_GIT_REGISTRY_DIR="$MDB_BUILD_DIR/cargo_git_registry"


#ARG VC_SRC_DIR_BUILD_DIR="$VC_SRC_DIR_SRC_DIR/build"
ARG DEBIAN_FRONTEND=noninteractive

ENV CARGO_HOME=/usr/local/rust
ENV RUSTUP_HOME=/usr/local/rust
ENV PATH="$PATH:$CARGO_HOME/bin"

RUN apt-get update \
    && apt-get -y install --no-install-recommends \
    binutils-dev \
    build-essential \
    wget \
    curl \
    git \
    python3 \
    python3-pip \
    tmux \
    neovim \
    net-tools\
    fzf 

RUN apt-get -y install software-properties-common
RUN apt-add-repository ppa:fish-shell/release-3 
RUN apt update 
RUN apt -y install fish

# We need to install node and npm from source because of this issue with the
# ubuntu repository:
# https://bugs.launchpad.net/ubuntu/+source/nodejs/+bug/1794589
RUN (curl -sL https://deb.nodesource.com/setup_18.x | bash) \
    && apt-get install -y nodejs \
    && npm install --global yarn \
    && rm -rf /var/lib/apt/lists/*

# Install the Rust toolchain

RUN mkdir "$TMP_BUILD_DIR" \
    && curl https://sh.rustup.rs -sSf | sh -s -- -y \
    && rustup install "stable" \
    && cd "$TMP_BUILD_DIR" \
    && rm -rf "$CARGO_HOME/registry" \
    && ln -s "$CARGO_REGISTRY_DIR" "$CARGO_HOME/registry" \
    && rm -rf "$CARGO_HOME/git" \
    && ln -s "$CARGO_GIT_REGISTRY_DIR" "$CARGO_HOME/git" \
    && cd / \
    && rm -rf "$TMP_BUILD_DIR"    

# Add the tini init binary.
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION_TAG}/tini-static-amd64 /sbin/tini
RUN chmod +x /sbin/tini

RUN mkdir -p ~/.local/bin \
    && curl -L https://github.com/rust-lang/rust-analyzer/releases/latest/download/rust-analyzer-x86_64-unknown-linux-gnu.gz | gunzip -c - > ~/.local/bin/rust-analyzer \
    && chmod +x ~/.local/bin/rust-analyzer 

RUN mkdir $HOME/.config

RUN sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

COPY devctr/init.vim /init.vim
RUN mkdir $HOME/.config/nvim
RUN cp /init.vim $HOME/.config/nvim/init.vim

COPY devctr/.tmux.conf /.tmux.conf
RUN cp /.tmux.conf ~/.tmux.conf

COPY devctr/config.fish /config.fish
RUN mkdir ~/.config/fish
RUN cp /config.fish ~/.config/fish/config.fish

RUN nvim --headless +PlugInstall +qall

RUN timeout 5 nvim  --headless  "+CocInstall coc-rust-analyzer"; exit 0
RUN timeout 5 nvim  --headless  "+CocInstall coc-html"; exit 0
RUN timeout 5 nvim  --headless  "+CocInstall coc-tsserver"; exit 0

RUN chsh -s $(which fish)

COPY /devctr/docker-entrypoint.sh /docker-entrypoint.sh

RUN chmod +x docker-entrypoint.sh

WORKDIR "$AT_SRC_DIR"

ENTRYPOINT ["/sbin/tini", "--", "/docker-entrypoint.sh"]